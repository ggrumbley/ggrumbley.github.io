<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Random Grumblings</title>
    <description>This is a place for all my random ideas and projects.
</description>
    <link>http://garygrumbley.com/</link>
    <atom:link href="http://garygrumbley.com/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Thu, 29 Dec 2016 17:41:01 -0800</pubDate>
    <lastBuildDate>Thu, 29 Dec 2016 17:41:01 -0800</lastBuildDate>
    <generator>Jekyll v3.1.6</generator>
    
      <item>
        <title>React Sheets</title>
        <description>&lt;p&gt;&lt;a href=&quot;/projects/sheets/index.html&quot; class=&quot;btn btn-green&quot; role=&quot;button&quot; target=&quot;_blank&quot;&gt;Project&lt;/a&gt;
&lt;a href=&quot;https://github.com/ggrumbley/react-spreadsheet&quot; class=&quot;btn btn-blue&quot; role=&quot;button&quot; target=&quot;_blank&quot;&gt;GitHub&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;After spending the last year locked into an Angular project at work I have wanted to try something simpler. There is nothing wrong with Angular but it is a hefty enough abstraction over pure JavaScript that it feels more like a DSL. Now that most ES6 features are compatible with every major browser in addition to Node, I have wanted to get back to basics and really focus on learning to write clean ES6 JavaScript. I also like the general web component trend of encapsulating front end code into easily reusable modules. React has championed both ES6 and web components. I have wanted to get started with React but have been apprehensive about getting locked into another JavaScript framework.&lt;/p&gt;

&lt;p&gt;I decided to build a spreadsheet component using just React and React DOM. I chose this canonical React example to see if I could build a useful non-trivial component without being locked into the React ecosystem or being forced to wade through the quickly changing JavaScript tooling ecosystem. I have foregone ES6 in this project so I can focus on basic React. The only libraries used in this project are React, React DOM, and Pure CSS.&lt;/p&gt;

&lt;p&gt;The component is fully dynamic, taking advantage of the way data is passed throughout the component. It takes two inputs: a one dimensional array of header information and a two dimensional array of spreadsheet data. The data loaded into the spreadsheet is my own board game collection. It has a lot of functionality including JSON/CSV exports, ‘ctrl+z’ undo shortcut, inline editing and data filters/search.&lt;/p&gt;

&lt;p&gt;I learned a lot from building this component without JSX. The component is 241 lines of code with well over 200 of those being just vanilla JavaScript methods. React is only used to create the component, to designate its initial state, and to render the elements on the DOM. Without JSX I had to call React DOM functions to create each type of element that I needed. The first argument was an object of attributes and the second was any child elements. This was definitely a clunky way to write out the markup for the component but not unworkable. Now I have a component that can be dropped into just about any project (including an Angular project) and it will just work.&lt;/p&gt;

&lt;p&gt;Once I overcame the initial React learning curve to figure out how props and state are used, this project went relatively quickly. It was also a lot of fun. Next up for this component will be adding a transpiler so I can convert the component to use JSX and ES6.&lt;/p&gt;
</description>
        <pubDate>Thu, 29 Dec 2016 11:37:00 -0800</pubDate>
        <link>http://garygrumbley.com/projects/2016/12/29/sheets.html</link>
        <guid isPermaLink="true">http://garygrumbley.com/projects/2016/12/29/sheets.html</guid>
        
        
        <category>Projects</category>
        
      </item>
    
      <item>
        <title>Grumblebucks</title>
        <description>&lt;p&gt;&lt;a href=&quot;/projects/grumblebucks/index.html&quot; class=&quot;btn btn-green&quot; role=&quot;button&quot; target=&quot;_blank&quot;&gt;Project&lt;/a&gt;
&lt;a href=&quot;https://github.com/ggrumbley/grumblebucks&quot; class=&quot;btn btn-blue&quot; role=&quot;button&quot; target=&quot;_blank&quot;&gt;GitHub&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is a demo app I built to demonstrate front-end JavaScript techniques. This a simple web form for a fictitious coffee company called Grumblebucks. The user inputs their order which then shows up in a drink queue for the barista. This app is primarily plain JavaScript using object oriented techniques for organizing my code. I used the Yeti Bootswatch theme for simple styling.&lt;/p&gt;
</description>
        <pubDate>Thu, 01 Dec 2016 09:54:01 -0800</pubDate>
        <link>http://garygrumbley.com/projects/2016/12/01/grumblebucks.html</link>
        <guid isPermaLink="true">http://garygrumbley.com/projects/2016/12/01/grumblebucks.html</guid>
        
        
        <category>Projects</category>
        
      </item>
    
      <item>
        <title>Typeahead From CSV File</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/project-autoCountry.png&quot; alt=&quot;Typeahead Example image&quot; title=&quot;Typeahead Example&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This is a typeahead example I built for a code test. The data is pulled from a CSV file that is parsed on the client side. The typeahead functionality is achieved with jQuery and vanilla JavaScript. The user’s selection is added to a list.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/projects/autoCountry/index.html&quot; class=&quot;btn btn-green&quot; role=&quot;button&quot; target=&quot;_blank&quot;&gt;Project&lt;/a&gt;
&lt;a href=&quot;https://github.com/ggrumbley/ggrumbley.github.io/tree/master/projects/autoCountry&quot; class=&quot;btn btn-blue&quot; role=&quot;button&quot; target=&quot;_blank&quot;&gt;GitHub&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 17 Nov 2016 09:54:01 -0800</pubDate>
        <link>http://garygrumbley.com/projects/2016/11/17/typeahead.html</link>
        <guid isPermaLink="true">http://garygrumbley.com/projects/2016/11/17/typeahead.html</guid>
        
        
        <category>Projects</category>
        
      </item>
    
      <item>
        <title>Generic Property Site</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/project-propertyMGMT.png&quot; alt=&quot;Generic Property Site image&quot; title=&quot;Generic Site&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This is a simple generic property management page I built for a code test. This is a responsive site built with a mobile first approach. The page features a dynamically generated comment section and a three image slideshow.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/projects/propertyMGMT/index.html&quot; class=&quot;btn btn-green&quot; role=&quot;button&quot; target=&quot;_blank&quot;&gt;Project&lt;/a&gt;
&lt;a href=&quot;https://github.com/ggrumbley/ggrumbley.github.io/tree/master/projects/propertyMGMT&quot; class=&quot;btn btn-blue&quot; role=&quot;button&quot; target=&quot;_blank&quot;&gt;GitHub&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 17 Nov 2016 09:53:01 -0800</pubDate>
        <link>http://garygrumbley.com/projects/2016/11/17/generic-prop-site.html</link>
        <guid isPermaLink="true">http://garygrumbley.com/projects/2016/11/17/generic-prop-site.html</guid>
        
        
        <category>Projects</category>
        
      </item>
    
      <item>
        <title>myWhiskyShelf</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/project-myWhiskyShelf.png&quot; alt=&quot;Whisky Shelf App image&quot; title=&quot;myWhiskyShelf&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This is a site for recording the user’s whisky collection and allows them to add their own impressions of the whisky. This application is built with the Ruby on Rails Omakase stack.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://lit-lowlands-5680.herokuapp.com/&quot; class=&quot;btn btn-green&quot; role=&quot;button&quot; target=&quot;_blank&quot;&gt;Project&lt;/a&gt;
&lt;a href=&quot;https://github.com/ggrumbley/myWhiskeyShelf&quot; class=&quot;btn btn-blue&quot; role=&quot;button&quot; target=&quot;_blank&quot;&gt;GitHub&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 17 Nov 2016 09:52:01 -0800</pubDate>
        <link>http://garygrumbley.com/projects/2016/11/17/myWhiskyShelf.html</link>
        <guid isPermaLink="true">http://garygrumbley.com/projects/2016/11/17/myWhiskyShelf.html</guid>
        
        
        <category>Projects</category>
        
      </item>
    
      <item>
        <title>Dynamically Generated Tabs</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/project-tabs.png&quot; alt=&quot;Dynamically Generated Tabs image&quot; title=&quot;Dynamically Generated Tabs Example&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This is a simple page UI I built using jQuery and CSS3 transitions. The user can generate multiple boxes and specify how many tabs are in each box as well as which tab will be the default tab. The color for each box is selected at random.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/projects/dynamicTabGenerator/dynamic.html&quot; class=&quot;btn btn-green&quot; role=&quot;button&quot; target=&quot;_blank&quot;&gt;Project&lt;/a&gt;
&lt;a href=&quot;https://github.com/ggrumbley/ggrumbley.github.io/tree/master/projects/dynamicTabGenerator&quot; class=&quot;btn btn-blue&quot; role=&quot;button&quot; target=&quot;_blank&quot;&gt;GitHub&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 17 Nov 2016 09:51:01 -0800</pubDate>
        <link>http://garygrumbley.com/projects/2016/11/17/dynamic-tabs.html</link>
        <guid isPermaLink="true">http://garygrumbley.com/projects/2016/11/17/dynamic-tabs.html</guid>
        
        
        <category>Projects</category>
        
      </item>
    
      <item>
        <title>StumblinGrumblin.com</title>
        <description>&lt;p&gt;This is my old homepage. It is a simple static site made with Bootstrap.&lt;/p&gt;
</description>
        <pubDate>Thu, 17 Nov 2016 09:49:01 -0800</pubDate>
        <link>http://garygrumbley.com/projects/2016/11/17/old-homepage.html</link>
        <guid isPermaLink="true">http://garygrumbley.com/projects/2016/11/17/old-homepage.html</guid>
        
        
        <category>Projects</category>
        
      </item>
    
      <item>
        <title>History Walk</title>
        <description>&lt;p&gt;&lt;img src=&quot;/assets/project-historyWalk.png&quot; alt=&quot;HistoryWalk project image&quot; title=&quot;HistoryWalk&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This project is an audio tour app. The goal of this app is to make custom audio tours accessable to parks, towns and small art galleries. This project is built with Angular, Bootstrap and Ruby on Rails. Best viewed on mobile.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://apologetic-eh-5318.herokuapp.com/&quot; class=&quot;btn btn-green&quot; role=&quot;button&quot; target=&quot;_blank&quot;&gt;Project&lt;/a&gt;
&lt;a href=&quot;https://github.com/ggrumbley/historyWalk&quot; class=&quot;btn btn-blue&quot; role=&quot;button&quot; target=&quot;_blank&quot;&gt;GitHub&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 16 Nov 2016 09:55:01 -0800</pubDate>
        <link>http://garygrumbley.com/projects/2016/11/16/history-walk.html</link>
        <guid isPermaLink="true">http://garygrumbley.com/projects/2016/11/16/history-walk.html</guid>
        
        
        <category>Projects</category>
        
      </item>
    
      <item>
        <title>Welcome to Random Grumblings</title>
        <description>&lt;p&gt;Welcome to my new blog. This will be my little corner of the internet. I plan to post information on the projects I am working on and any random thoughts I may have.&lt;/p&gt;
</description>
        <pubDate>Thu, 10 Nov 2016 09:50:01 -0800</pubDate>
        <link>http://garygrumbley.com/blog/2016/11/10/welcome-to-my-new-blog.html</link>
        <guid isPermaLink="true">http://garygrumbley.com/blog/2016/11/10/welcome-to-my-new-blog.html</guid>
        
        
        <category>blog</category>
        
      </item>
    
  </channel>
</rss>
